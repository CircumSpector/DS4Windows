<controls:AdonisWindow x:Name="mainDS4Window" x:Class="DS4WinWPF.DS4Forms.MainWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:tb="http://www.hardcodet.net/taskbar"
                       xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                       xmlns:lex="http://wpflocalizeextension.codeplex.com"
                       lex:LocalizeDictionary.DesignCulture=""
                       lex:ResxLocalizationProvider.DefaultAssembly="DS4Windows"
                       lex:ResxLocalizationProvider.DefaultDictionary="Strings"
                       xmlns:local="clr-namespace:DS4WinWPF.DS4Forms"
                       xmlns:localConverters="clr-namespace:DS4WinWPF.DS4Forms.Converters"
                       xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
                       xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                       xml:lang="en-US"
                       mc:Ignorable="d"
                       Title="DS4Windows"
                       Height="500" Width="800"
                       Closing="MainDS4Window_Closing"
                       Closed="MainDS4Window_Closed"
                       StateChanged="MainDS4Window_StateChanged"
                       SizeChanged="MainDS4Window_SizeChanged"
                       LocationChanged="MainDS4Window_LocationChanged"
                       MinWidth="600" MinHeight="250">
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}" />
    </Window.Style>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:ImageLocationPaths x:Key="ImgLocPaths" />
    </Window.Resources>

    <Window.CommandBindings>
        <!-- TODO: workaround until ReactiveUI is introduced -->
        <CommandBinding Command="ApplicationCommands.New" Executed="New_OnExecuted" CanExecute="New_OnCanExecute" />
        <CommandBinding Command="ApplicationCommands.Properties" Executed="Properties_OnExecuted"
                        CanExecute="Properties_OnCanExecute" />
    </Window.CommandBindings>

    <DockPanel>
        <tb:TaskbarIcon x:Name="notifyIcon" IconSource="{Binding IconSource,Mode=OneWay}"
                        MenuActivation="RightClick"
                        TrayRightMouseUp="NotifyIcon_TrayRightMouseUp"
                        TrayMiddleMouseDown="NotifyIcon_TrayMiddleMouseDown"
                        TrayMouseDoubleClick="NotifyIcon_TrayMouseDoubleClick">
            <tb:TaskbarIcon.TrayToolTip>
                <Border
                    Background="White"
                    BorderBrush="Orange"
                    BorderThickness="2"
                    CornerRadius="4"
                    Opacity="0.8"
                    Width="160"
                    Height="40">
                    <TextBlock
                        Text="{Binding TooltipText,Mode=OneWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                    />
                </Border>
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>

        <!-- Bottom Status bar --> 
        <StackPanel DockPanel.Dock="Bottom" Height="30" VerticalAlignment="Bottom">
            <DockPanel Height="30">
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                    <Button x:Name="aboutBtn" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"
                            Foreground="#FF3881D8"
                            Style="{StaticResource NoBGHoverBtn}" Click="AboutBtn_Click">
                        <TextBlock Text="Hotkeys/About" TextDecorations="Underline"
                                   Foreground="{DynamicResource AccentColor}" Cursor="Hand" x:Uid="hotkeysText" />
                    </Button>
                    <Button x:Name="StartStopBtn" Content="{lex:Loc StartText}" Margin="10,0,4,0"
                            Click="StartStopBtn_Click" Width="60" Height="20"
                            Foreground="{DynamicResource ForegroundColor}" />
                </StackPanel>
                <Label x:Name="lastMsgLb" Content="{Binding Message}" ToolTip="{Binding Message}"
                       Foreground="{Binding Color}" Margin="4,0,2,0" />
            </DockPanel>
        </StackPanel>

        <!-- Main Tab Control -->
        <TabControl x:Name="mainTabCon" DockPanel.Dock="Top" SelectionChanged="MainTabCon_SelectionChanged">

            <!-- Controllers Tab -->
            <TabItem Header="{lex:Loc Controllers}" IsEnabled="{Binding FullTabsEnabled,Mode=OneWay}"
                     Content="{Binding conLvViewModel.MainView}">
                
            </TabItem>

            <!-- Profiles Tab -->
            <TabItem x:Name="profilesTab" Header="{lex:Loc Profiles}">
                <DockPanel x:Name="profDockPanel">
                    <ToolBar x:Name="profOptsToolbar" Height="30" DockPanel.Dock="Top" Background="{x:Null}">
                        <Button x:Name="newProfListBtn" Click="NewProfListBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding NewProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc New}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button x:Name="editProfBtn" Margin="10,0,0,0" IsEnabled="False" Click="EditProfBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding EditProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc Edit}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button x:Name="deleteProfBtn" Margin="10,0,0,0" IsEnabled="False" Click="DeleteProfBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding DeleteProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc Delete}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button x:Name="renameProfBtn" Margin="10,0,0,0" IsEnabled="False" Click="RenameProfBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding EditProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc RenameProfile}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button x:Name="dupProfBtn" Margin="10,0,0,0" IsEnabled="False" Click="DupProfBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding DuplicateProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc Duplicate}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button x:Name="importProfBtn" Margin="10,0,0,0" Click="ImportProfBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding ImportProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc Import}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button x:Name="exportProfBtn" Margin="10,0,0,0" IsEnabled="False" Click="ExportProfBtn_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding ExportProfile, Source={StaticResource ImgLocPaths}}" />
                                    <TextBlock Text="{lex:Loc Export}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </ToolBar>
                    <ToolBar x:Name="dupBoxBar" Height="40" DockPanel.Dock="Top" Background="{x:Null}"
                             HorizontalAlignment="Center" Visibility="Collapsed">
                        <local:DupBox x:Name="dupBox" />
                    </ToolBar>

                    <ListBox x:Name="profilesListBox" DockPanel.Dock="Bottom"
                             ItemsSource="{Binding Path=AvailableProfiles}"
                             SelectedItem="{Binding Path=CurrentlyEditedProfile}"
                             SelectionChanged="ProfilesListBox_SelectionChanged"
                             MouseDoubleClick="ProfilesListBox_MouseDoubleClick">
                        <ListBox.Resources>
                            <localConverters:EscapeAccessKeysConverter x:Key="escapeAccessConvert" />
                        </ListBox.Resources>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsImmutable}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Label
                                    Content="{Binding ExtendedDisplayName, Mode=OneWay, Converter={StaticResource escapeAccessConvert}}"
                                    Margin="{adonisUi:Space 1,0.5}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>

            <!-- Auto Profiles Tab -->
            <TabItem Header="{lex:Loc AutoProfiles}" IsEnabled="{Binding FullTabsEnabled,Mode=OneWay}">
                <local:AutoProfiles x:Name="autoProfControl" />
            </TabItem>

            <!-- Output Slots Tab -->
            <TabItem Header="Output Slots" IsEnabled="{Binding FullTabsEnabled,Mode=OneWay}">
                <local:OutputSlotManagerControl x:Name="slotManControl" />
            </TabItem>

            <!-- Settings Tab -->
            <TabItem x:Name="settingsTab" Header="{lex:Loc Settings}" IsEnabled="{Binding ViewEnabled,Mode=OneWay}">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                    <WrapPanel Orientation="Vertical" Margin="{adonisUi:Space 1}">
                        <WrapPanel.Resources>
                            <Thickness x:Key="spaceMargin" Left="4" Right="0" Bottom="8" Top="0" />
                        </WrapPanel.Resources>

                        <CheckBox x:Name="hideDS4ContCk" Content="Hide DS4 Controller" x:Uid="hideDS4Checkbox"
                                  Margin="{adonisUi:Space 0.5}" IsChecked="{Binding HideDS4Controller}"
                                  Click="HideDS4ContCk_Click" />
                        <CheckBox x:Name="swipeTouchCk" Content="Swipe Touchpad To Switch Profiles"
                                  Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding SwipeTouchSwitchProfile}"
                                  ToolTip="{lex:Loc Resources:TwoFingerSwipe}" Click="SwipeTouchCk_Click" />
                        <CheckBox x:Name="runAtStartCk" Content="{lex:Loc RunAtStartup}"
                                  Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding RunAtStartup}"
                                  ToolTip="{lex:Loc Resources:RunAtStartup}" Click="RunAtStartCk_Click" />

                        <GroupBox x:Name="runAsGroupBox" Header="Run As" BorderThickness="2"
                                  Visibility="{Binding ShowRunStartPanel}"
                                  Margin="{adonisUi:Space 1}">
                            <StackPanel Orientation="Horizontal" Margin="{adonisUi:Space 1}">
                                <StackPanel>
                                    <RadioButton Content="Program" GroupName="RunAsOpt"
                                                 Margin="{adonisUi:Space 1}"
                                                 IsChecked="{Binding RunStartProg}" />
                                    <RadioButton Content="Task" GroupName="RunAsOpt"
                                                 Margin="{adonisUi:Space 1}"
                                                 IsChecked="{Binding RunStartTask}" IsEnabled="{Binding CanWriteTask}" />
                                </StackPanel>
                                <Image x:Name="uacImg" Source="{Binding UACSource, Mode=OneTime}" Width="30"
                                       Height="30"
                                       ToolTip="{lex:Loc Resources:UACTask}" Margin="20,0,0,0" />
                            </StackPanel>
                        </GroupBox>

                        <StackPanel Orientation="Horizontal" Margin="{adonisUi:Space 0.5, 1}">
                            <Label Content="{lex:Loc ShowNotifications}" Margin="{adonisUi:Space 0.5}"
                                   VerticalAlignment="Center" />
                            <ComboBox MinWidth="100" SelectedIndex="{Binding ShowNotificationsIndex}"
                                      Margin="{adonisUi:Space 0.5}">
                                <ComboBoxItem Content="{lex:Loc None}" />
                                <ComboBoxItem Content="{lex:Loc WarningsOnly}" />
                                <ComboBoxItem Content="{lex:Loc All}" />
                            </ComboBox>
                        </StackPanel>

                        <CheckBox Content="Disconnect from BT when Stopping" Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding DisconnectBTStop}" />

                        <StackPanel Orientation="Horizontal">
                            <CheckBox Content="Flash Lightbar at High Latency" VerticalAlignment="Center"
                                      IsChecked="{Binding FlashHighLatency}" Margin="{adonisUi:Space 0.5}" />
                            <StackPanel Orientation="Horizontal" Margin="{adonisUi:Space 0.5, 1}"
                                        IsEnabled="{Binding FlashHighLatency,FallbackValue='False'}">
                                <!--<TextBox Text="20" VerticalContentAlignment="Center" />-->
                                <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding FlashHighLatencyAt}"
                                                    MinWidth="30" ButtonSpinnerLocation="Right" Increment="1"
                                                    Maximum="100" Minimum="10"
                                                    Margin="{adonisUi:Space 0.5, 1}" />
                                <Label Content="ms" VerticalAlignment="Center" Margin="{adonisUi:Space 0.5, 1}" />
                            </StackPanel>
                        </StackPanel>

                        <CheckBox Content="{lex:Loc StartMinimized}" Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding StartMinimize}" />
                        <CheckBox Content="Minimize to Taskbar"
                                  ToolTip="Minimize to Taskbar instead of System Tray"
                                  IsChecked="{Binding MinimizeToTaskbar}" Margin="{adonisUi:Space 0.5}" />
                        <CheckBox Content="{lex:Loc CloseMinimizes}" Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding CloseMinimizes}"
                                  ToolTip="{lex:Loc Resources:CloseMinimize}" />
                        <CheckBox Content="{lex:Loc QuickCharge}" Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding QuickCharge}"
                                  ToolTip="{lex:Loc Resources:QuickCharge}" />

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Icon Choice:" VerticalAlignment="Center" Margin="{adonisUi:Space 0.5}" />
                            <ComboBox x:Name="useIconChoiceCom"
                                      SelectedIndex="{Binding IconChoiceIndex,FallbackValue='0'}"
                                      Margin="{adonisUi:Space 0.5}">
                                <ComboBoxItem>Default</ComboBoxItem>
                                <ComboBoxItem>Colored</ComboBoxItem>
                                <ComboBoxItem>White</ComboBoxItem>
                                <ComboBoxItem>Black</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Label Content="App Theme:" VerticalAlignment="Center" Margin="{adonisUi:Space 0.5}" />
                            <ComboBox x:Name="appThemeCom" SelectedIndex="{Binding AppChoiceIndex,FallbackValue='0'}"
                                      Margin="{adonisUi:Space 0.5}">
                                <ComboBoxItem>Default</ComboBoxItem>
                                <ComboBoxItem>Dark</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>

                        <CheckBox Content="{lex:Loc CheckUpdateStartup}" Margin="{adonisUi:Space 0.5}"
                                  IsChecked="{Binding CheckForUpdates}" />

                        <StackPanel x:Name="checkEveryOptionsStack" Orientation="Horizontal"
                                    IsEnabled="{Binding CheckForUpdates}">
                            <Label Content="Check every " VerticalAlignment="Center" Margin="{adonisUi:Space 0.5}" />
                            <!--<TextBox Text="0" VerticalAlignment="Center" />-->
                            <xctk:IntegerUpDown d:IsHidden="True" Value="{Binding CheckEvery}" MinWidth="30"
                                                Margin="{adonisUi:Space 0.5}"
                                                ButtonSpinnerLocation="Right" Increment="1" Maximum="30" Minimum="0" />
                            <ComboBox SelectedIndex="{Binding CheckEveryUnit,FallbackValue=1}"
                                      Margin="{adonisUi:Space 0.5}"
                                      Foreground="{DynamicResource ForegroundColor}" MinWidth="60">
                                <ComboBoxItem Content="Hours" />
                                <ComboBoxItem Content="Days" />
                            </ComboBox>
                        </StackPanel>

                        <!-- UDP Server -->
                        <GroupBox Header="UDP Server" Margin="{adonisUi:Space 1}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" MinHeight="20">
                                    <CheckBox x:Name="useUdpServerCk" Content="Enable Server"
                                              Margin="{adonisUi:Space 0.5}"
                                              IsChecked="{Binding UseUDPServer}" Click="UseUdpServerCk_Click" />
                                    <TextBox x:Name="udpServerTxt" IsEnabled="{Binding UseUDPServer,Mode=OneWay}"
                                             Text="{Binding UdpIpAddress, UpdateSourceTrigger=LostFocus,FallbackValue='127.0.0.1'}"
                                             Margin="{adonisUi:Space 0.5}" />
                                    <Label Content="Port" Margin="{adonisUi:Space 0.5}" VerticalAlignment="Center" />
                                    <!--<TextBox x:Name="updPortNum" IsEnabled="{Binding UseUDPServer}" Text="{Binding UdpPort, UpdateSourceTrigger=LostFocus,FallbackValue='26760'}" />-->
                                    <xctk:IntegerUpDown d:IsHidden="True" x:Name="updPortNum"
                                                        IsEnabled="{Binding UseUDPServer}" MinWidth="20"
                                                        Margin="{adonisUi:Space 0.5}"
                                                        Value="{Binding UdpPort, UpdateSourceTrigger=LostFocus,FallbackValue='26760'}"
                                                        ButtonSpinnerLocation="Right" Increment="1" Maximum="65535"
                                                        Minimum="0" />
                                </StackPanel>

                                <CheckBox Content="Use Smoothing"
                                          IsChecked="{Binding UseUdpSmoothing,FallbackValue='False'}"
                                          IsEnabled="{Binding UseUDPServer,Mode=OneWay}" Margin="{adonisUi:Space 0.5}" />

                                <StackPanel x:Name="udpEuroPanel" Orientation="Horizontal"
                                            Margin="{adonisUi:Space 0.5}"
                                            Visibility="{Binding UdpServerOneEuroPanelVisibility,FallbackValue='Collapsed'}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="1&#x20ac; MinCutoff" VerticalAlignment="Center"
                                               Margin="{adonisUi:Space 0.5}" />
                                        <xctk:DoubleUpDown d:IsHidden="True" FormatString="F5"
                                                           Margin="{adonisUi:Space 0.5}"
                                                           Value="{Binding UdpSmoothMinCutoff,FallbackValue=1.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.00001" Maximum="100.0" Increment="0.1"
                                                           MinWidth="60" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="30,0,0,0">
                                        <Label Content="1&#x20ac; Beta" VerticalAlignment="Center"
                                               Margin="{adonisUi:Space 0.5}" />
                                        <xctk:DoubleUpDown d:IsHidden="True" FormatString="F5"
                                                           Margin="{adonisUi:Space 0.5}"
                                                           Value="{Binding UdpSmoothBeta,FallbackValue=0.0,UpdateSourceTrigger=LostFocus}"
                                                           Minimum="0.0" Maximum="1.0" Increment="0.1" MinWidth="60" />
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                        </GroupBox>

                        <local:LanguagePackControl Margin="{adonisUi:Space 0.5}" />

                        <DockPanel Margin="{StaticResource spaceMargin}">
                            <Label Content="{lex:Loc CustomExeName}" VerticalAlignment="Center"
                                   Margin="{adonisUi:Space 0.5}" />
                            <Button x:Name="fakeExeNameExplainBtn" DockPanel.Dock="Right" Margin="{adonisUi:Space 0.5}"
                                    Click="FakeExeNameExplainBtn_Click">
                                <Image Source="{Binding QuestionMarkSource, Mode=OneTime}"
                                       Width="20" Height="20" Stretch="UniformToFill" />
                            </Button>
                            <TextBox x:Name="fakeExeNameTxt"
                                     Text="{Binding FakeExeName, UpdateSourceTrigger=LostFocus}" MinWidth="200" />
                        </DockPanel>

                        <Button x:Name="deviceOptionSettingsBtn" HorizontalAlignment="Left"
                                Margin="{adonisUi:Space 0.5}"
                                Content="Device-specific Settings" Click="DeviceOptionSettingsBtn_Click" />

                        <!-- Utilities -->
                        <GroupBox Header="Utils" Margin="{adonisUi:Space 1}" HorizontalAlignment="Left">
                            <WrapPanel HorizontalAlignment="Left" Orientation="Vertical">
                                <Button x:Name="profFolderBtn" BorderThickness="0" Margin="0,0,4,4"
                                        Background="{x:Null}" BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="ProfFolderBtn_Click">
                                    <TextBlock Text="{lex:Loc ProfileFolder}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="controlPanelBtn" BorderThickness="0" Margin="0,0,4,4"
                                        Background="{x:Null}" BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="ControlPanelBtn_Click">
                                    <TextBlock Text="{lex:Loc ControlPanel}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="html5GameBtn" BorderThickness="0" Margin="0,0,4,4"
                                        Background="{x:Null}" BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="Html5GameBtn_Click">
                                    <TextBlock Text="{lex:Loc GamepadTest}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="xinputCheckerBtn" BorderThickness="0" Margin="0,0,4,4"
                                        Background="{x:Null}" BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="XinputCheckerBtn_Click">
                                    <TextBlock Text="{lex:Loc XInputChecker}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="hidHideBtn" BorderThickness="0" Margin="0,0,4,4" Background="{x:Null}"
                                        BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="HidHideBtn_Click"
                                        Visibility="{Binding HidHideInstalled, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                                    <TextBlock Text="{lex:Loc HidHideConfigClient}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="driverSetupBtn" BorderThickness="0" Margin="0,0,4,4"
                                        Background="{x:Null}" BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="DriverSetupBtn_Click">
                                    <TextBlock Text="{lex:Loc DriverSetup}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="checkUpdatesBtn" BorderThickness="0" Margin="0,0,4,4"
                                        Background="{x:Null}" BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="CheckUpdatesBtn_Click">
                                    <!--="CheckUpdatesBtn_Click">-->
                                    <TextBlock Text="{lex:Loc CheckUpdateNow}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                                <Button x:Name="checklogViewBtn" BorderThickness="0" Background="{x:Null}"
                                        BorderBrush="{x:Null}"
                                        Style="{StaticResource NoBGHoverBtn}" Click="ChecklogViewBtn_Click"
                                        Margin="0,0,4,4">
                                    <!--="CheckUpdatesBtn_Click">-->
                                    <TextBlock Text="{lex:Loc Changelog}" TextDecorations="Underline"
                                               Foreground="{DynamicResource AccentColor}" Cursor="Hand" />
                                </Button>
                            </WrapPanel>
                        </GroupBox>


                    </WrapPanel>
                </ScrollViewer>

            </TabItem>
            
        </TabControl>
    </DockPanel>
</controls:AdonisWindow>